#summary The CDMA philosophy in a few words.

*Content*
 * [#Introduction Introduction]
 * [#The_data_model The data model]
 * [#The_plug-in_mechanism The plug-in mechanism]
 * [#The_dictionary_mechanism The dictionary mechanism]

= Introduction =
----

The CDMA is made of:
 * a client layer API for writing data reduction and analysis applications.
 * a developer API to build data access engines and plug-ins.

Using the client API, data reduction applications developer don't have to know anything about the file formats because it uses an abstract data access layer that hide data files specifications.
The data files specifications are embedded through a plug-in mechanism. Therefore it's the institutes responsibility to develop their own data access plug-in in order to give the possibility to open datasets acquired in their institutes through the CDMA.

Nevertheless, using the navigation API, the developer have to precisely know the way the data is organised in each data file his application will access. We think it's a useless waste of time.
To solve this issue the CDMA introduce a new, innovative way, of accessing data. This is the dictionary mechanism.

Using this mechanism, data reduction application developer no longer have to known about the way the data is organised. The data is now accessed using keywords. A keyword is a short characters string naming a scientific measurement or a generic technical data. Thus the data access part of data reduction applications source code is simpler and, this is the most important, more stable.
Considering this mechanism, scientists have to agreed on key names, regardless the way the data is physically organised. Moreover, the data may have different units (wavelenght vs. energy for example) for the same measurement, the CDMA provide a mechanism to perform  conversions at run-time.
Please not that the old-style navigation API is still available but we strongly recommend to consider the dictionary API.

The schema below summarizes the principles of the CDMA:

[http://cdma.googlecode.com/svn/wiki/images/cdma_schema1.png]

= The data model =
----

Basically the CDMA consider a scientific data set as a hierarchical organization, containing groups and sub groups to data item which are leafs. Each level of of this tree organization can also contains metadata describing the data itself.

[http://cdma.googlecode.com/svn/wiki/images/datamodel.png]

Many data container will fit well such an organization, for example:
 * HDF files are naturally hierarchical with groups and data items
 * CIF files fit this model with data blocks and data items
 * A control system like Tango fit this model too if we consider a tango data base as a a CDMA dataset, a device as a CDMA group and an device attribute as a CDMA data item.

= The plug-in mechanism =
----

Using the CDMA library, data analysis developer don't have to care about data file format. Accessing data is done by a plug-in mechanism. Institutes producing data have to develop the plug-ins able to offering access to their data through the CDMA.

Client applications developers don't have to care about existing plug-in while developing data analysis applications. The CDMA is able to automatically detect which plug-in to use accordingly to a data set.

Also this mechanism allows an user to open files acquired in different institutes, in the same session.

= The dictionary mechanism =
----

The point is: the way the data is organized into data files is no longer a issue on the data analysis software side.

The dictionary mechanism rely on two XML documents.

== Data definitions ==
The first document is a set a keywords matching scientific or technical data items. For instance a key named _source_current_ should refer to the effective current in a storage ring at acquisition time. These keywords may be just listed by this document or organized through a tree hierarchy. In this last case, this document describe a particular a view on the data, like a NeXus application definition.
This document is intended to be independent of the way the data is physically organized.
There are (at least) two ways of writing this document: 
 * it may be written for a specific data analysis software which is already existent and adapted to use the CDMA,
 * or it may be written independently of any software like the NeXus application definitions.

a data definition may looks like this:

{{{
<data-def name="data_definition_name">
  <item key = "user_name"/>
  <item key = "facility_name"/>
  <item key = "source_current"/>
  <item key = "beamline_energy"/>
  ...
</data-def>
}}}

This is a list of keywords which should be the result of a consensus among the users community. keywords can also be grouped together, but
However, a keywords synonyms mechanism allows data analysis application developers to can not wait until this kind of consensus exists.

== Keywords mapping ==
The second document is the mapping between keywords and physical data organization.
It needs a strong knowledge of the physical data organisation to be written. This is therefore the responsibility of the institute producing data to write this document.

a mapping definition may looks like this:

{{{
<map-def name="data_definition_name">
  <item key = "user_name">
    <path>/path/to/the/user/name</path>
  </item>
  <item key = "facility_name">
    <path>/path/to/the/user/name</path>
  </item>
  <item key = "source_current">
    <path>/path/to/the/current</path>
  </item>
  <item key = "beamline_energy">
    <path>/path/to/the/wavelength</path>
    <call>WavelengthToEnergy</call>
  </item>
  ...
</data-def>
}}}

In the example above, the _beamline_energy_ keyword refer to a _wavelength_ data item following by a _call_ tag. The CDMA provide a mechanism allowing on the fly data transformation if the stored data does not match keyword definition.

== Responsibilities ==
Given a keywords list, the institutes that produce experimental data have to write the mapping document corresponding to their data files.